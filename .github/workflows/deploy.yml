name: Deploy to VPS

on:
    push:
        branches:
            - main # later, change to main

jobs:
    deploy:
        runs-on: ubuntu-latest

        steps:
            -   name: "Checkout"
                uses: actions/checkout@v4

            -   name: "Clean /testing directory on remote"
                uses: appleboy/ssh-action@v1.2.0
                with:
                    host: ${{ secrets.SSH_HOST }}
                    username: ${{ secrets.SSH_USERNAME }}
                    key: ${{ secrets.SSH_KEY }}
                    script: |
                        rm -rf /testing/*
                        mkdir -p /testing

            -   name: "Deploy everything to remote"
                uses: appleboy/scp-action@v0.1.7
                with:
                    host: ${{ secrets.SSH_HOST }}
                    username: ${{ secrets.SSH_USERNAME }}
                    key: ${{ secrets.SSH_KEY }}
                    source: "."
                    target: "/testing"
                    timeout: 60s

            -   name: "Validate and apply NixOS configuration"
                uses: appleboy/ssh-action@v1.2.0
                with:
                    host: ${{ secrets.SSH_HOST }}
                    username: ${{ secrets.SSH_USERNAME }}
                    key: ${{ secrets.SSH_KEY }}
                    script: |
                        cd /testing
                        # Test testing first
                        rm -rf .git
                        sudo nixos-rebuild build --flake .#ampere-config
                        if [ $? -eq 0 ]; then
                            sudo nixos-rebuild switch --flake .#ampere-config || true
                        else
                            echo "Build failed! Not applying changes."
                            exit 1
                        fi
                    timeout: 300s

            -   name: "Run server"
                uses: appleboy/ssh-action@v1.2.0
                with:
                    host: ${{ secrets.SSH_HOST }}
                    username: ${{ secrets.SSH_USERNAME }}
                    key: ${{ secrets.SSH_KEY }}
                    script: |
                        cd /testing

                        export PYTHONPATH=$PYTHONPATH:$(pwd)

                        python3 -m venv app/projectenv
                        source app/projectenv/bin/activate

                        pip install -r app/requirements.txt

                        (
                            cd app/static/proud &&
                            echo "Installing dependencies:" &&
                            npm install @types/node &&
                            npm install @rollup/plugin-alias &&
                            npm install @sveltejs/vite-plugin-svelte &&
                            npm install @tsconfig/svelte &&
                            npm install svelte &&
                            npm install svelte-check &&
                            npm install tslib &&
                            npm install typescript &&
                            npm install vite
                        )

                        (
                            cd app/static/proud &&
                            echo "Building frontend:" &&
                            npm run build
                        )

                        (
                            cd app/ &&
                            echo "Collecting static files:" &&
                            python manage.py collectstatic
                        )

                        screen -ls | grep -E "^\s*[0-9]+\." | awk '{print $1}' | xargs -I{} screen -X -S {} quit || true

                        screen -dmS django bash -c "cd /testing/app && python manage.py makemigrations && python manage.py migrate && python manage.py runserver"